GNAT 5.1.0
Copyright 1992-2015, Free Software Foundation, Inc.

Compiling: l1.adb
Source file time stamp: 2017-09-13 22:03:32
Compiled at: 2017-09-14 08:33:45

     1. with ada.text_io, math;
     2.
     3. procedure l1 is	
     4. 	package integer_io is new ada.text_io.integer_io(positive);
     5. 	
     6. 	n1, n2, n3 : positive;
     7. 	procedure tasks is
     8. 		task t1 is
     9. 			entry input_mutex;
    10. 			entry output_mutex;
    11. 		end t1;
    12. 		task t2 is
    13. 			entry input_mutex;
    14. 			entry output_mutex;
    15. 		end t2;
    16. 		task t3 is
    17. 			entry input_mutex;
    18. 			entry output_mutex;
    19. 		end t3;
    20. 		
    21. 		task body t1 is
    22. 			package mathematics is new math(n1); use mathematics;
    23. 			a : vector; 
    24. 			b : vector;
    25. 			c : vector;
    26. 			ma : matrix;
    27. 			me : matrix;
    28. 		begin 
    29. 			ada.text_io.put_line("First Task was initialized.");
    30. 			a := get_vector;
    31. 			b := get_vector;
    32. 			ma := get_matrix;
    33. 			me := get_matrix;
    34. 			accept input_mutex do null; end input_mutex;
    35. 			c := sort(a) * (ma * me) + sort(b);
    36. 			t3.input_mutex;
    37. 			ada.text_io.put("F1's ");
    38. 			put_vector(c);
    39. 			accept output_mutex do null; end output_mutex;
    40. 			t3.output_mutex;
    41. 			ada.text_io.put_line("First Task was processed.");
    42. 		end t1;
    43. 		task body t2 is 
    44. 			package mathematics is new math(n2); use mathematics;
    45. 			mk : matrix;
    46. 			mh : matrix;
    47. 			mf : matrix;
    48. 			mg : matrix;
    49. 		begin 
    50. 			ada.text_io.put_line("Second Task was initialized.");
    51. 			t1.input_mutex;
    52. 			mk := get_matrix;
    53. 			mh := get_matrix;
    54. 			mf := get_matrix;
    55. 			accept input_mutex do null; end input_mutex;
    56. 			mg := transpose(mk) * (mh * mf);
    57. 			t3.input_mutex;
    58. 			t1.output_mutex;
    59. 			ada.text_io.put("F2's ");
    60. 			put_matrix(mg);
    61. 			accept output_mutex do null; end output_mutex;
    62. 			t3.output_mutex;
    63. 			ada.text_io.put_line("Second Task was processed.");
    64. 		end t2;
    65. 		task body t3 is 
    66. 			package mathematics is new math(n3); use mathematics;
    67. 			r : vector; 
    68. 			s : vector;
    69. 			o : vector;
    70. 			mt : matrix;
    71. 			mp : matrix;
    72. 		begin
    73. 			ada.text_io.put_line("Third Task was initialized.");
    74. 			t2.input_mutex;
    75. 			r := get_vector;
    76. 			s := get_vector;
    77. 			mt := get_matrix;
    78. 			mp := get_matrix;
    79. 			accept input_mutex do null; end input_mutex;
    80. 			accept input_mutex do null; end input_mutex;
    81. 			o := sort(r + s) * (mt * mp);
    82. 			t2.output_mutex;
    83. 			ada.text_io.put("F3's ");
    84. 			put_vector(o);
    85. 			accept output_mutex do null; end output_mutex;
    86. 			accept output_mutex do null; end output_mutex;
    87. 			ada.text_io.put_line("Third Task was processed.");
    88. 		end t3;	
    89. 	begin
    90. 		null;
    91. 	end tasks;
    92. begin
    93. 	ada.text_io.put("Input N for the first function: ");
    94. 	n1 := positive'value(ada.text_io.get_line);
    95. 	ada.text_io.put("Input N for the second function: ");
    96. 	n2 := positive'value(ada.text_io.get_line);
    97. 	ada.text_io.put("Input N for the third function: ");
    98. 	n3 := positive'value(ada.text_io.get_line);
    99. 	tasks;
   100. end l1;

 100 lines: No errors
